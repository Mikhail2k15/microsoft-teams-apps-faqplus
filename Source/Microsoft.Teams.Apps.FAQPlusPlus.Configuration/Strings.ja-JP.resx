<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BotCommandAskAnExpert" xml:space="preserve">
    <value>専門家に質問する</value>
    <comment>Bot command ask an expert</comment>
  </data>
  <data name="BotCommandAskAnExpertDescription" xml:space="preserve">
    <value>エキスパートにつなげる</value>
    <comment>Bot command ask an expert description</comment>
  </data>
  <data name="BotCommandShareFeedback" xml:space="preserve">
    <value>フィードバックを共有</value>
    <comment>bot command share feedback</comment>
  </data>
  <data name="BotCommandShareFeedbackDescription" xml:space="preserve">
    <value>フィードバックを送信</value>
    <comment>bot command share feedback description</comment>
  </data>
  <data name="BotCommandTakeATour" xml:space="preserve">
    <value>ツアーを開始</value>
    <comment>Bot command take a tour</comment>
  </data>
  <data name="BotCommandTakeATourDescription" xml:space="preserve">
    <value>主な機能のツアー</value>
    <comment>Bot command take a tour description</comment>
  </data>
  <data name="ComposeExtensionCommandAddNewQuestion" xml:space="preserve">
    <value>新しい質問を追加する</value>
    <comment>Compose extension command add new question</comment>
  </data>
  <data name="ComposeExtensionCommandAddNewQuestionDescription" xml:space="preserve">
    <value>新しい qna ペアの追加</value>
    <comment>Compose extension command add new question description</comment>
  </data>
  <data name="ComposeExtensionCommandAssigned" xml:space="preserve">
    <value>割り当て済み</value>
    <comment>Compose extension command assigned</comment>
  </data>
  <data name="ComposeExtensionCommandAssignedDescription" xml:space="preserve">
    <value>エキスパートに割り当てられた要求を検索</value>
    <comment>Compose extension command assigned description</comment>
  </data>
  <data name="ComposeExtensionCommandKnowledgeBase" xml:space="preserve">
    <value>ナレッジ ベース</value>
    <comment>ComposeExtension command knowledge base</comment>
  </data>
  <data name="ComposeExtensionCommandKnowledgeBaseDescription" xml:space="preserve">
    <value>最近のリクエストを検索する</value>
    <comment>ComposeExtension command knowledge base description</comment>
  </data>
  <data name="ComposeExtensionCommandKnowledgeBaseParameterDescription" xml:space="preserve">
    <value>KB QnA を検索する</value>
    <comment>Compose extension command parameter description</comment>
  </data>
  <data name="ComposeExtensionCommandParameter" xml:space="preserve">
    <value>検索</value>
    <comment>Compose extension command parameter search</comment>
  </data>
  <data name="ComposeExtensionCommandParameterAddAQuestion" xml:space="preserve">
    <value>質問を追加</value>
    <comment>Compose extension command parameter add a question </comment>
  </data>
  <data name="ComposeExtensionCommandParameterDescription" xml:space="preserve">
    <value>チケットを検索</value>
    <comment>Compose extension command parameter search description</comment>
  </data>
  <data name="ComposeExtensionCommandRecent" xml:space="preserve">
    <value>最近</value>
    <comment>Compose extension command recent</comment>
  </data>
  <data name="ComposeExtensionCommandRecentDescription" xml:space="preserve">
    <value>最近のリクエストを検索する</value>
    <comment>Compose extension command recent description</comment>
  </data>
  <data name="ComposeExtensionCommandUnassigned" xml:space="preserve">
    <value>未割り当て</value>
    <comment>Compose extension command unassigned</comment>
  </data>
  <data name="ComposeExtensionCommandUnassignedDescription" xml:space="preserve">
    <value>エキスパートにまだ割り当てられていない未割り当ての要求を検索</value>
    <comment>Compose extension command unassigned description</comment>
  </data>
  <data name="DefaultHelpTabText" xml:space="preserve">
    <value>こんにちは、私は簡単に操作できる Q&amp;A ボットです。質問をしていただければ、できる限りお答えします。お役に立てない場合は、エキスパートにおつなぎします。

主な機能:

* 質問して、回答を得る
* エキスパートに聞く
* フィードバックを共有する</value>
    <comment>Default help static tab text to be stored in configuration app</comment>
  </data>
  <data name="DefaultWelcomeMessage" xml:space="preserve">
    <value>こんにちは、私はあなたのフレンドリーな Q&amp;A ボットです。あなたは私に質問をすることができます、そして私は答えるために最善を尽くします。サポートしていない場合は、専門家にご連絡します。

次の質問をすることができます:
* どのように動作しますか?
* どの特典が利用できますか?
* 現在ここで利用できるものは何ですか?</value>
    <comment>Default welcome message text to be stored in configuration app</comment>
  </data>
  <data name="EndUserManifestFullDescription" xml:space="preserve">
    <value>よくある質問に答えるフレンドリーな質問と回答用のボットです。 回答できない場合は、専門家が対応できるようになり次第、専門家につなぎます。</value>
    <comment>{MaxLength=4000}
End user manifest full description
</comment>
  </data>
  <data name="EndUserManifestName" xml:space="preserve">
    <value>FAQ プラス</value>
    <comment>{MaxLength=30}
End user manifest name
</comment>
  </data>
  <data name="EndUserManifestShortDescription" xml:space="preserve">
    <value>質問に答えて専門家に接続する、フレンドリーな FAQ ボットです。</value>
    <comment>{MaxLength=80}
End user manifest short description
</comment>
  </data>
  <data name="EndUserTabName" xml:space="preserve">
    <value>ヘルプ</value>
    <comment>End user tab name</comment>
  </data>
  <data name="HelpTabTextToolTipHoverMessage" xml:space="preserve">
    <value>ボットの [ヘルプ] タブに表示されるテキストを入力し、[OK] をクリックして追加するか、[編集] をクリックして変更します</value>
    <comment>Message for help tab when information icon is hovered</comment>
  </data>
  <data name="KnowledgeBaseToolTipHoverMessage" xml:space="preserve">
    <value>ボットが使用する有効なナレッジベース ID を入力し、[OK] をクリックして追加するか、[編集] をクリックして変更します</value>
    <comment>Message for knowledgebase id when information icon is hovered</comment>
  </data>
  <data name="SmeManifestFullDescription" xml:space="preserve">
    <value>よくある質問に答えるフレンドリーな質問と回答用のボットです。 回答できない場合は、専門家が対応できるようになり次第、専門家につなぎます。</value>
    <comment>{MaxLength=4000}
SME manifest full description
</comment>
  </data>
  <data name="SmeManifestName" xml:space="preserve">
    <value>FAQ プラス (専門家チーム)</value>
    <comment>{MaxLength=30}
SME manifest name</comment>
  </data>
  <data name="SmeManifestShortDescription" xml:space="preserve">
    <value>質問に答えて専門家に接続する、フレンドリーな FAQ ボットです。</value>
    <comment>{MaxLength=80}
SME manifest short description
</comment>
  </data>
  <data name="TeamIdToolTipHoverMessage" xml:space="preserve">
    <value>ボットが使用するチーム ID ディープリンクを指定し、[OK] をクリックして追加するか、[編集] をクリックして変更します</value>
    <comment>Message for team id when information icon is hovered</comment>
  </data>
  <data name="WelcomeMessageToolTipHoverMessage" xml:space="preserve">
    <value>ボットが使用するウェルカム メッセージを入力し、[OK] をクリックして追加するか、[編集] をクリックして変更します</value>
    <comment>Message for welcome message when information icon is hovered</comment>
  </data>
</root>